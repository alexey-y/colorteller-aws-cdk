{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "colorteller-network": {
        "id": "colorteller-network",
        "path": "colorteller-network",
        "children": {
          "colorteller-vpc": {
            "id": "colorteller-vpc",
            "path": "colorteller-network/colorteller-vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-network/colorteller-vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "colorteller-network/colorteller-vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "colorteller-network/colorteller-vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPublicSubnet1RouteTableAD50ECF6"
                        },
                        "subnetId": {
                          "Ref": "colortellervpcPublicSubnet1Subnet87371C14"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPublicSubnet1RouteTableAD50ECF6"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "colortellervpcIGW7B6E0553"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "colortellervpcPublicSubnet1EIP38850BB0",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "colortellervpcPublicSubnet1Subnet87371C14"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "colorteller-network/colorteller-vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPublicSubnet2RouteTableBE19A7D1"
                        },
                        "subnetId": {
                          "Ref": "colortellervpcPublicSubnet2SubnetA18F1BEB"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPublicSubnet2RouteTableBE19A7D1"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "colortellervpcIGW7B6E0553"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "colorteller-network/colorteller-vpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "colortellervpcPublicSubnet2EIPFB094D81",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "colortellervpcPublicSubnet2SubnetA18F1BEB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "colorteller-network/colorteller-vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPrivateSubnet1RouteTable197A15F0"
                        },
                        "subnetId": {
                          "Ref": "colortellervpcPrivateSubnet1Subnet4AE82466"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPrivateSubnet1RouteTable197A15F0"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "colortellervpcPublicSubnet1NATGatewayC06BA278"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "colorteller-network/colorteller-vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "colorteller-network/colorteller-vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPrivateSubnet2RouteTable2FB50D89"
                        },
                        "subnetId": {
                          "Ref": "colortellervpcPrivateSubnet2Subnet2722E5E5"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "colorteller-network/colorteller-vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "colortellervpcPrivateSubnet2RouteTable2FB50D89"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "colortellervpcPublicSubnet2NATGateway28E0FF3B"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "colorteller-network/colorteller-vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "colorteller-network/colorteller-vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "colorteller-network/colorteller-vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "colortellervpcA3932739"
                    },
                    "internetGatewayId": {
                      "Ref": "colortellervpcIGW7B6E0553"
                    }
                  }
                }
              },
              "ECS_Agent": {
                "id": "ECS_Agent",
                "path": "colorteller-network/colorteller-vpc/ECS_Agent",
                "children": {
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "colorteller-network/colorteller-vpc/ECS_Agent/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-network/colorteller-vpc/ECS_Agent/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "colorteller-network/colorteller-vpc/ECS_Agent/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::GetAtt": [
                                    "colortellervpcA3932739",
                                    "CidrBlock"
                                  ]
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 443,
                                "toPort": 443,
                                "description": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "from ",
                                      {
                                        "Fn::GetAtt": [
                                          "colortellervpcA3932739",
                                          "CidrBlock"
                                        ]
                                      },
                                      ":443"
                                    ]
                                  ]
                                }
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "colorteller-network/colorteller-vpc"
                              }
                            ],
                            "vpcId": {
                              "Ref": "colortellervpcA3932739"
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-network/colorteller-vpc/ECS_Agent/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCEndpoint",
                      "aws:cdk:cloudformation:props": {
                        "serviceName": {
                          "Fn::Join": [
                            "",
                            [
                              "com.amazonaws.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".ecs-agent"
                            ]
                          ]
                        },
                        "vpcId": {
                          "Ref": "colortellervpcA3932739"
                        },
                        "privateDnsEnabled": true,
                        "securityGroupIds": [
                          {
                            "Fn::GetAtt": [
                              "colortellervpcECSAgentSecurityGroupE7269F2F",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnetIds": [
                          {
                            "Ref": "colortellervpcPrivateSubnet1Subnet4AE82466"
                          },
                          {
                            "Ref": "colortellervpcPrivateSubnet2Subnet2722E5E5"
                          }
                        ],
                        "vpcEndpointType": "Interface"
                      }
                    }
                  }
                }
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "colorteller-network/Exports",
            "children": {
              "Output{\"Ref\":\"colortellervpcA3932739\"}": {
                "id": "Output{\"Ref\":\"colortellervpcA3932739\"}",
                "path": "colorteller-network/Exports/Output{\"Ref\":\"colortellervpcA3932739\"}"
              },
              "Output{\"Ref\":\"colortellervpcPrivateSubnet1Subnet4AE82466\"}": {
                "id": "Output{\"Ref\":\"colortellervpcPrivateSubnet1Subnet4AE82466\"}",
                "path": "colorteller-network/Exports/Output{\"Ref\":\"colortellervpcPrivateSubnet1Subnet4AE82466\"}"
              },
              "Output{\"Ref\":\"colortellervpcPrivateSubnet2Subnet2722E5E5\"}": {
                "id": "Output{\"Ref\":\"colortellervpcPrivateSubnet2Subnet2722E5E5\"}",
                "path": "colorteller-network/Exports/Output{\"Ref\":\"colortellervpcPrivateSubnet2Subnet2722E5E5\"}"
              },
              "Output{\"Fn::GetAtt\":[\"colortellervpcA3932739\",\"CidrBlock\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"colortellervpcA3932739\",\"CidrBlock\"]}",
                "path": "colorteller-network/Exports/Output{\"Fn::GetAtt\":[\"colortellervpcA3932739\",\"CidrBlock\"]}"
              },
              "Output{\"Ref\":\"colortellervpcPublicSubnet1Subnet87371C14\"}": {
                "id": "Output{\"Ref\":\"colortellervpcPublicSubnet1Subnet87371C14\"}",
                "path": "colorteller-network/Exports/Output{\"Ref\":\"colortellervpcPublicSubnet1Subnet87371C14\"}"
              },
              "Output{\"Ref\":\"colortellervpcPublicSubnet2SubnetA18F1BEB\"}": {
                "id": "Output{\"Ref\":\"colortellervpcPublicSubnet2SubnetA18F1BEB\"}",
                "path": "colorteller-network/Exports/Output{\"Ref\":\"colortellervpcPublicSubnet2SubnetA18F1BEB\"}"
              }
            }
          }
        }
      },
      "colorteller-app-mesh": {
        "id": "colorteller-app-mesh",
        "path": "colorteller-app-mesh",
        "children": {
          "colorteller-app-mesh": {
            "id": "colorteller-app-mesh",
            "path": "colorteller-app-mesh/colorteller-app-mesh",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-app-mesh/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::Mesh",
                  "aws:cdk:cloudformation:props": {
                    "meshName": "ColorTellerAppMesh",
                    "spec": {
                      "egressFilter": {
                        "type": "ALLOW_ALL"
                      }
                    }
                  }
                }
              }
            }
          },
          "colorteller-black-vn": {
            "id": "colorteller-black-vn",
            "path": "colorteller-app-mesh/colorteller-black-vn",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-black-vn/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualNode",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 9080,
                            "protocol": "http"
                          },
                          "healthCheck": {
                            "healthyThreshold": 2,
                            "intervalMillis": 5000,
                            "path": "/ping",
                            "port": 9080,
                            "protocol": "http",
                            "timeoutMillis": 2000,
                            "unhealthyThreshold": 2
                          }
                        }
                      ],
                      "serviceDiscovery": {
                        "dns": {
                          "hostname": "black.svc.test.local"
                        }
                      },
                      "logging": {
                        "accessLog": {
                          "file": {
                            "path": "/dev/stdout"
                          }
                        }
                      }
                    },
                    "virtualNodeName": "black"
                  }
                }
              }
            }
          },
          "colorteller-blue-vn": {
            "id": "colorteller-blue-vn",
            "path": "colorteller-app-mesh/colorteller-blue-vn",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-blue-vn/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualNode",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 9080,
                            "protocol": "http"
                          },
                          "healthCheck": {
                            "healthyThreshold": 2,
                            "intervalMillis": 5000,
                            "path": "/ping",
                            "port": 9080,
                            "protocol": "http",
                            "timeoutMillis": 2000,
                            "unhealthyThreshold": 2
                          }
                        }
                      ],
                      "serviceDiscovery": {
                        "dns": {
                          "hostname": "blue.svc.test.local"
                        }
                      },
                      "logging": {
                        "accessLog": {
                          "file": {
                            "path": "/dev/stdout"
                          }
                        }
                      }
                    },
                    "virtualNodeName": "blue"
                  }
                }
              }
            }
          },
          "colorteller-red-vn": {
            "id": "colorteller-red-vn",
            "path": "colorteller-app-mesh/colorteller-red-vn",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-red-vn/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualNode",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 9080,
                            "protocol": "http"
                          },
                          "healthCheck": {
                            "healthyThreshold": 2,
                            "intervalMillis": 5000,
                            "path": "/ping",
                            "port": 9080,
                            "protocol": "http",
                            "timeoutMillis": 2000,
                            "unhealthyThreshold": 2
                          }
                        }
                      ],
                      "serviceDiscovery": {
                        "dns": {
                          "hostname": "red.svc.test.local"
                        }
                      },
                      "logging": {
                        "accessLog": {
                          "file": {
                            "path": "/dev/stdout"
                          }
                        }
                      }
                    },
                    "virtualNodeName": "red"
                  }
                }
              }
            }
          },
          "colorteller-white-vn": {
            "id": "colorteller-white-vn",
            "path": "colorteller-app-mesh/colorteller-white-vn",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-white-vn/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualNode",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 9080,
                            "protocol": "http"
                          },
                          "healthCheck": {
                            "healthyThreshold": 2,
                            "intervalMillis": 5000,
                            "path": "/ping",
                            "port": 9080,
                            "protocol": "http",
                            "timeoutMillis": 2000,
                            "unhealthyThreshold": 2
                          }
                        }
                      ],
                      "serviceDiscovery": {
                        "dns": {
                          "hostname": "white.svc.test.local"
                        }
                      },
                      "logging": {
                        "accessLog": {
                          "file": {
                            "path": "/dev/stdout"
                          }
                        }
                      }
                    },
                    "virtualNodeName": "white"
                  }
                }
              }
            }
          },
          "colorteller-echo-vn": {
            "id": "colorteller-echo-vn",
            "path": "colorteller-app-mesh/colorteller-echo-vn",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-echo-vn/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualNode",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 2701,
                            "protocol": "http"
                          },
                          "healthCheck": {
                            "healthyThreshold": 2,
                            "intervalMillis": 5000,
                            "path": "/ping",
                            "port": 2701,
                            "protocol": "http",
                            "timeoutMillis": 2000,
                            "unhealthyThreshold": 2
                          }
                        }
                      ],
                      "serviceDiscovery": {
                        "dns": {
                          "hostname": "tcpecho.svc.test.local"
                        }
                      },
                      "logging": {
                        "accessLog": {
                          "file": {
                            "path": "/dev/stdout"
                          }
                        }
                      }
                    },
                    "virtualNodeName": "echo"
                  }
                }
              }
            }
          },
          "colorteller-virtual-router": {
            "id": "colorteller-virtual-router",
            "path": "colorteller-app-mesh/colorteller-virtual-router",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-virtual-router/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualRouter",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 9080,
                            "protocol": "http"
                          }
                        }
                      ]
                    },
                    "virtualRouterName": "colorteller-rtr"
                  }
                }
              },
              "colorteller-route": {
                "id": "colorteller-route",
                "path": "colorteller-app-mesh/colorteller-virtual-router/colorteller-route",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-mesh/colorteller-virtual-router/colorteller-route/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AppMesh::Route",
                      "aws:cdk:cloudformation:props": {
                        "meshName": {
                          "Fn::GetAtt": [
                            "colortellerappmesh8996CD80",
                            "MeshName"
                          ]
                        },
                        "routeName": "colorteller-route",
                        "spec": {
                          "httpRoute": {
                            "match": {
                              "prefix": "/"
                            },
                            "action": {
                              "weightedTargets": [
                                {
                                  "virtualNode": {
                                    "Fn::GetAtt": [
                                      "colortellerblackvn9F389B51",
                                      "VirtualNodeName"
                                    ]
                                  },
                                  "weight": 1
                                },
                                {
                                  "virtualNode": {
                                    "Fn::GetAtt": [
                                      "colortellerbluevnD8D97407",
                                      "VirtualNodeName"
                                    ]
                                  },
                                  "weight": 1
                                },
                                {
                                  "virtualNode": {
                                    "Fn::GetAtt": [
                                      "colortellerredvnCE8A2598",
                                      "VirtualNodeName"
                                    ]
                                  },
                                  "weight": 1
                                },
                                {
                                  "virtualNode": {
                                    "Fn::GetAtt": [
                                      "colortellerwhitevn55E4B4E9",
                                      "VirtualNodeName"
                                    ]
                                  },
                                  "weight": 1
                                }
                              ]
                            }
                          }
                        },
                        "virtualRouterName": {
                          "Fn::GetAtt": [
                            "colortellervirtualrouter927EC3B0",
                            "VirtualRouterName"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "colorteller-virtual-service": {
            "id": "colorteller-virtual-service",
            "path": "colorteller-app-mesh/colorteller-virtual-service",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-virtual-service/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualService",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "provider": {
                        "virtualRouter": {
                          "virtualRouterName": {
                            "Fn::GetAtt": [
                              "colortellervirtualrouter927EC3B0",
                              "VirtualRouterName"
                            ]
                          }
                        }
                      }
                    },
                    "virtualServiceName": "colorteller.svc.test.local"
                  }
                }
              }
            }
          },
          "colorteller-echo-virtual-service": {
            "id": "colorteller-echo-virtual-service",
            "path": "colorteller-app-mesh/colorteller-echo-virtual-service",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-echo-virtual-service/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualService",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "provider": {
                        "virtualNode": {
                          "virtualNodeName": {
                            "Fn::GetAtt": [
                              "colortellerechovn2CBDD471",
                              "VirtualNodeName"
                            ]
                          }
                        }
                      }
                    },
                    "virtualServiceName": "tcpecho.svc.test.local"
                  }
                }
              }
            }
          },
          "colorteller-gateway-vn": {
            "id": "colorteller-gateway-vn",
            "path": "colorteller-app-mesh/colorteller-gateway-vn",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-mesh/colorteller-gateway-vn/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppMesh::VirtualNode",
                  "aws:cdk:cloudformation:props": {
                    "meshName": {
                      "Fn::GetAtt": [
                        "colortellerappmesh8996CD80",
                        "MeshName"
                      ]
                    },
                    "spec": {
                      "backends": [
                        {
                          "virtualService": {
                            "virtualServiceName": {
                              "Fn::GetAtt": [
                                "colortellervirtualservice6CD78685",
                                "VirtualServiceName"
                              ]
                            }
                          }
                        },
                        {
                          "virtualService": {
                            "virtualServiceName": {
                              "Fn::GetAtt": [
                                "colortellerechovirtualserviceD3C71A06",
                                "VirtualServiceName"
                              ]
                            }
                          }
                        }
                      ],
                      "listeners": [
                        {
                          "portMapping": {
                            "port": 9080,
                            "protocol": "http"
                          },
                          "healthCheck": {
                            "healthyThreshold": 2,
                            "intervalMillis": 5000,
                            "path": "/ping",
                            "port": 9080,
                            "protocol": "http",
                            "timeoutMillis": 2000,
                            "unhealthyThreshold": 2
                          }
                        }
                      ],
                      "serviceDiscovery": {
                        "dns": {
                          "hostname": "gateway.svc.test.local"
                        }
                      },
                      "logging": {
                        "accessLog": {
                          "file": {
                            "path": "/dev/stdout"
                          }
                        }
                      }
                    },
                    "virtualNodeName": "gateway"
                  }
                }
              }
            }
          }
        }
      },
      "colorteller-app-service": {
        "id": "colorteller-app-service",
        "path": "colorteller-app-service",
        "children": {
          "fargate-service-autoscaling": {
            "id": "fargate-service-autoscaling",
            "path": "colorteller-app-service/fargate-service-autoscaling",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/fargate-service-autoscaling/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "DefaultServiceDiscoveryNamespace": {
                "id": "DefaultServiceDiscoveryNamespace",
                "path": "colorteller-app-service/fargate-service-autoscaling/DefaultServiceDiscoveryNamespace",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/fargate-service-autoscaling/DefaultServiceDiscoveryNamespace/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
                      "aws:cdk:cloudformation:props": {
                        "name": "svc.test.local",
                        "vpc": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "svc.test.local": {
            "id": "svc.test.local",
            "path": "colorteller-app-service/svc.test.local",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/svc.test.local/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                  "aws:cdk:cloudformation:props": {
                    "dnsConfig": {
                      "dnsRecords": [
                        {
                          "type": "A",
                          "ttl": 60
                        }
                      ],
                      "namespaceId": {
                        "Fn::GetAtt": [
                          "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                          "Id"
                        ]
                      },
                      "routingPolicy": "WEIGHTED"
                    },
                    "namespaceId": {
                      "Fn::GetAtt": [
                        "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                        "Id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "execution-role": {
            "id": "execution-role",
            "path": "colorteller-app-service/execution-role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/execution-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSCodeDeployRoleForECS"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "colorteller-app-service/execution-role/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/execution-role/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/",
                                    {
                                      "Fn::GetAtt": [
                                        "gatewaytaskgatewayAssetImageAdoptRepository04DFDE13",
                                        "RepositoryName"
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "ecr:GetAuthorizationToken",
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "ecscolorteller95A3B0F7",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":840364872350:aws-appmesh-envoy"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/",
                                    {
                                      "Fn::GetAtt": [
                                        "blacktaskblackAssetImageAdoptRepository94CA9D56",
                                        "RepositoryName"
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/",
                                    {
                                      "Fn::GetAtt": [
                                        "bluetaskblueAssetImageAdoptRepository70E8C9D0",
                                        "RepositoryName"
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/",
                                    {
                                      "Fn::GetAtt": [
                                        "redtaskredAssetImageAdoptRepository2DED75C6",
                                        "RepositoryName"
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/",
                                    {
                                      "Fn::GetAtt": [
                                        "whitetaskwhiteAssetImageAdoptRepository7347D5EA",
                                        "RepositoryName"
                                      ]
                                    }
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "executionroleDefaultPolicy497F11A3",
                        "roles": [
                          {
                            "Ref": "executionroleD9A39BE6"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "task-role": {
            "id": "task-role",
            "path": "colorteller-app-service/task-role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/task-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSAppMeshEnvoyAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/CloudWatchFullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                          ]
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "aws-envoy": {
            "id": "aws-envoy",
            "path": "colorteller-app-service/aws-envoy"
          },
          "--ecs--colorteller": {
            "id": "--ecs--colorteller",
            "path": "colorteller-app-service/--ecs--colorteller",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/--ecs--colorteller/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "retentionInDays": 1
                  }
                }
              }
            }
          },
          "gateway_task": {
            "id": "gateway_task",
            "path": "colorteller-app-service/gateway_task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/gateway_task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ".dkr.ecr.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParameters1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bfImageNameC66728B3"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "@sha256:",
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParameters1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bfImageNameC66728B3"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        "name": "gateway",
                        "portMappings": [
                          {
                            "containerPort": 9080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "gateway",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "SERVER_PORT",
                            "value": "9080"
                          },
                          {
                            "name": "STAGE",
                            "value": "v1.1"
                          },
                          {
                            "name": "COLOR_TELLER_ENDPOINT",
                            "value": "colorteller.svc.test.local:9080"
                          },
                          {
                            "name": "TCP_ECHO_ENDPOINT",
                            "value": "tcpecho.svc.test.local:2701"
                          }
                        ]
                      },
                      {
                        "essential": true,
                        "image": "amazon/aws-xray-daemon",
                        "name": "xray",
                        "portMappings": [
                          {
                            "containerPort": 2000,
                            "protocol": "udp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "gateway",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        }
                      },
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/aws-appmesh-envoy:v1.12.1.1-prod"
                            ]
                          ]
                        },
                        "name": "envoy",
                        "portMappings": [
                          {
                            "containerPort": 9901,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15000,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15001,
                            "protocol": "tcp"
                          }
                        ],
                        "ulimits": [
                          {
                            "name": "nofile",
                            "softLimit": 15000,
                            "hardLimit": 15000
                          }
                        ],
                        "user": "1337",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "gateway",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "ENVOY_LOG_LEVEL",
                            "value": "debug"
                          },
                          {
                            "name": "ENABLE_ENVOY_XRAY_TRACING",
                            "value": "1"
                          },
                          {
                            "name": "ENABLE_ENVOY_STATS_TAGS",
                            "value": "1"
                          },
                          {
                            "name": "APPMESH_VIRTUAL_NODE_NAME",
                            "value": "mesh/ColorTellerAppMesh/virtualNode/gateway"
                          },
                          {
                            "name": "APPMESH_XDS_ENDPOINT",
                            "value": ""
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -s http://localhost:9901/ready |grep -q LIVE"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "executionroleD9A39BE6",
                        "Arn"
                      ]
                    },
                    "family": "colortellerappservicegatewaytaskC87E1A07",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "proxyConfiguration": {
                      "containerName": "envoy",
                      "proxyConfigurationProperties": [
                        {
                          "name": "AppPorts",
                          "value": "9080"
                        },
                        {
                          "name": "ProxyEgressPort",
                          "value": "15001"
                        },
                        {
                          "name": "ProxyIngressPort",
                          "value": "15000"
                        },
                        {
                          "name": "EgressIgnoredIPs",
                          "value": "169.254.170.2,169.254.169.254"
                        },
                        {
                          "name": "IgnoredUID",
                          "value": "1337"
                        }
                      ],
                      "type": "APPMESH"
                    },
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskrole5938D619",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "gateway": {
                "id": "gateway",
                "path": "colorteller-app-service/gateway_task/gateway",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "colorteller-app-service/gateway_task/gateway/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "colorteller-app-service/gateway_task/gateway/AssetImage/Staging"
                      },
                      "AdoptRepository": {
                        "id": "AdoptRepository",
                        "path": "colorteller-app-service/gateway_task/gateway/AssetImage/AdoptRepository",
                        "children": {
                          "Function": {
                            "id": "Function",
                            "path": "colorteller-app-service/gateway_task/gateway/AssetImage/AdoptRepository/Function"
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/gateway_task/gateway/AssetImage/AdoptRepository/Resource",
                            "children": {
                              "Default": {
                                "id": "Default",
                                "path": "colorteller-app-service/gateway_task/gateway/AssetImage/AdoptRepository/Resource/Default"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xray": {
                "id": "xray",
                "path": "colorteller-app-service/gateway_task/xray"
              },
              "envoy": {
                "id": "envoy",
                "path": "colorteller-app-service/gateway_task/envoy"
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "colorteller-app-service/AssetParameters",
            "children": {
              "1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bf": {
                "id": "1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bf",
                "path": "colorteller-app-service/AssetParameters/1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bf",
                "children": {
                  "ImageName": {
                    "id": "ImageName",
                    "path": "colorteller-app-service/AssetParameters/1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bf/ImageName"
                  }
                }
              },
              "a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7": {
                "id": "a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7",
                "path": "colorteller-app-service/AssetParameters/a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "colorteller-app-service/AssetParameters/a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "colorteller-app-service/AssetParameters/a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "colorteller-app-service/AssetParameters/a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7/ArtifactHash"
                  }
                }
              },
              "f44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9": {
                "id": "f44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9",
                "path": "colorteller-app-service/AssetParameters/f44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9",
                "children": {
                  "ImageName": {
                    "id": "ImageName",
                    "path": "colorteller-app-service/AssetParameters/f44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9/ImageName"
                  }
                }
              }
            }
          },
          "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c": {
            "id": "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c",
            "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "ecr:GetRepositoryPolicy",
                                    "ecr:SetRepositoryPolicy",
                                    "ecr:DeleteRepository",
                                    "ecr:ListImages",
                                    "ecr:BatchDeleteImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":repository/",
                                        {
                                          "Fn::Select": [
                                            0,
                                            {
                                              "Fn::Split": [
                                                "@sha256:",
                                                {
                                                  "Ref": "AssetParameters1ba77edd2a78131f0a85162a8e550a8f1e85c7d3461230d59220cef9aa60c7bfImageNameC66728B3"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ecr:GetRepositoryPolicy",
                                    "ecr:SetRepositoryPolicy",
                                    "ecr:DeleteRepository",
                                    "ecr:ListImages",
                                    "ecr:BatchDeleteImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ecr:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":repository/",
                                        {
                                          "Fn::Select": [
                                            0,
                                            {
                                              "Fn::Split": [
                                                "@sha256:",
                                                {
                                                  "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleDefaultPolicy6BC8737C",
                            "roles": [
                              {
                                "Ref": "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3Bucket7CBBD48C"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3VersionKey87E3D057"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3VersionKey87E3D057"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "handler.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs10.x",
                    "timeout": 300
                  }
                }
              }
            }
          },
          "black-task": {
            "id": "black-task",
            "path": "colorteller-app-service/black-task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/black-task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/aws-appmesh-envoy:v1.12.1.1-prod"
                            ]
                          ]
                        },
                        "name": "envoy",
                        "portMappings": [
                          {
                            "containerPort": 9901,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15000,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15001,
                            "protocol": "tcp"
                          }
                        ],
                        "ulimits": [
                          {
                            "name": "nofile",
                            "softLimit": 15000,
                            "hardLimit": 15000
                          }
                        ],
                        "user": "1337",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "black",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "ENVOY_LOG_LEVEL",
                            "value": "info"
                          },
                          {
                            "name": "ENABLE_ENVOY_XRAY_TRACING",
                            "value": "1"
                          },
                          {
                            "name": "ENABLE_ENVOY_STATS_TAGS",
                            "value": "1"
                          },
                          {
                            "name": "APPMESH_VIRTUAL_NODE_NAME",
                            "value": "mesh/ColorTellerAppMesh/virtualNode/black"
                          },
                          {
                            "name": "APPMESH_XDS_ENDPOINT",
                            "value": ""
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -s http://localhost:9901/ready |grep -q LIVE"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      },
                      {
                        "dependsOn": [
                          {
                            "containerName": "envoy",
                            "condition": "HEALTHY"
                          }
                        ],
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ".dkr.ecr.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "@sha256:",
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        "name": "black",
                        "portMappings": [
                          {
                            "containerPort": 9080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "black",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "COLOR",
                            "value": "black"
                          },
                          {
                            "name": "SERVER_PORT",
                            "value": "9080"
                          },
                          {
                            "name": "STAGE",
                            "value": "v1.1"
                          }
                        ]
                      },
                      {
                        "essential": true,
                        "image": "amazon/aws-xray-daemon",
                        "name": "xray",
                        "portMappings": [
                          {
                            "containerPort": 2000,
                            "protocol": "udp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "black",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "executionroleD9A39BE6",
                        "Arn"
                      ]
                    },
                    "family": "black",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "proxyConfiguration": {
                      "containerName": "envoy",
                      "proxyConfigurationProperties": [
                        {
                          "name": "AppPorts",
                          "value": "9080"
                        },
                        {
                          "name": "ProxyEgressPort",
                          "value": "15001"
                        },
                        {
                          "name": "ProxyIngressPort",
                          "value": "15000"
                        },
                        {
                          "name": "EgressIgnoredIPs",
                          "value": "169.254.170.2,169.254.169.254"
                        },
                        {
                          "name": "IgnoredUID",
                          "value": "1337"
                        }
                      ],
                      "type": "APPMESH"
                    },
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskrole5938D619",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "envoy": {
                "id": "envoy",
                "path": "colorteller-app-service/black-task/envoy"
              },
              "black": {
                "id": "black",
                "path": "colorteller-app-service/black-task/black",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "colorteller-app-service/black-task/black/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "colorteller-app-service/black-task/black/AssetImage/Staging"
                      },
                      "AdoptRepository": {
                        "id": "AdoptRepository",
                        "path": "colorteller-app-service/black-task/black/AssetImage/AdoptRepository",
                        "children": {
                          "Function": {
                            "id": "Function",
                            "path": "colorteller-app-service/black-task/black/AssetImage/AdoptRepository/Function"
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/black-task/black/AssetImage/AdoptRepository/Resource",
                            "children": {
                              "Default": {
                                "id": "Default",
                                "path": "colorteller-app-service/black-task/black/AssetImage/AdoptRepository/Resource/Default"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xray": {
                "id": "xray",
                "path": "colorteller-app-service/black-task/xray"
              }
            }
          },
          "blue-task": {
            "id": "blue-task",
            "path": "colorteller-app-service/blue-task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/blue-task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/aws-appmesh-envoy:v1.12.1.1-prod"
                            ]
                          ]
                        },
                        "name": "envoy",
                        "portMappings": [
                          {
                            "containerPort": 9901,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15000,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15001,
                            "protocol": "tcp"
                          }
                        ],
                        "ulimits": [
                          {
                            "name": "nofile",
                            "softLimit": 15000,
                            "hardLimit": 15000
                          }
                        ],
                        "user": "1337",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "blue",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "ENVOY_LOG_LEVEL",
                            "value": "info"
                          },
                          {
                            "name": "ENABLE_ENVOY_XRAY_TRACING",
                            "value": "1"
                          },
                          {
                            "name": "ENABLE_ENVOY_STATS_TAGS",
                            "value": "1"
                          },
                          {
                            "name": "APPMESH_VIRTUAL_NODE_NAME",
                            "value": "mesh/ColorTellerAppMesh/virtualNode/blue"
                          },
                          {
                            "name": "APPMESH_XDS_ENDPOINT",
                            "value": ""
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -s http://localhost:9901/ready |grep -q LIVE"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      },
                      {
                        "dependsOn": [
                          {
                            "containerName": "envoy",
                            "condition": "HEALTHY"
                          }
                        ],
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ".dkr.ecr.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "@sha256:",
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        "name": "blue",
                        "portMappings": [
                          {
                            "containerPort": 9080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "blue",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "COLOR",
                            "value": "black"
                          },
                          {
                            "name": "SERVER_PORT",
                            "value": "9080"
                          },
                          {
                            "name": "STAGE",
                            "value": "v1.1"
                          }
                        ]
                      },
                      {
                        "essential": true,
                        "image": "amazon/aws-xray-daemon",
                        "name": "xray",
                        "portMappings": [
                          {
                            "containerPort": 2000,
                            "protocol": "udp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "blue",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "executionroleD9A39BE6",
                        "Arn"
                      ]
                    },
                    "family": "blue",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "proxyConfiguration": {
                      "containerName": "envoy",
                      "proxyConfigurationProperties": [
                        {
                          "name": "AppPorts",
                          "value": "9080"
                        },
                        {
                          "name": "ProxyEgressPort",
                          "value": "15001"
                        },
                        {
                          "name": "ProxyIngressPort",
                          "value": "15000"
                        },
                        {
                          "name": "EgressIgnoredIPs",
                          "value": "169.254.170.2,169.254.169.254"
                        },
                        {
                          "name": "IgnoredUID",
                          "value": "1337"
                        }
                      ],
                      "type": "APPMESH"
                    },
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskrole5938D619",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "envoy": {
                "id": "envoy",
                "path": "colorteller-app-service/blue-task/envoy"
              },
              "blue": {
                "id": "blue",
                "path": "colorteller-app-service/blue-task/blue",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "colorteller-app-service/blue-task/blue/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "colorteller-app-service/blue-task/blue/AssetImage/Staging"
                      },
                      "AdoptRepository": {
                        "id": "AdoptRepository",
                        "path": "colorteller-app-service/blue-task/blue/AssetImage/AdoptRepository",
                        "children": {
                          "Function": {
                            "id": "Function",
                            "path": "colorteller-app-service/blue-task/blue/AssetImage/AdoptRepository/Function"
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/blue-task/blue/AssetImage/AdoptRepository/Resource",
                            "children": {
                              "Default": {
                                "id": "Default",
                                "path": "colorteller-app-service/blue-task/blue/AssetImage/AdoptRepository/Resource/Default"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xray": {
                "id": "xray",
                "path": "colorteller-app-service/blue-task/xray"
              }
            }
          },
          "red-task": {
            "id": "red-task",
            "path": "colorteller-app-service/red-task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/red-task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/aws-appmesh-envoy:v1.12.1.1-prod"
                            ]
                          ]
                        },
                        "name": "envoy",
                        "portMappings": [
                          {
                            "containerPort": 9901,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15000,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15001,
                            "protocol": "tcp"
                          }
                        ],
                        "ulimits": [
                          {
                            "name": "nofile",
                            "softLimit": 15000,
                            "hardLimit": 15000
                          }
                        ],
                        "user": "1337",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "red",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "ENVOY_LOG_LEVEL",
                            "value": "info"
                          },
                          {
                            "name": "ENABLE_ENVOY_XRAY_TRACING",
                            "value": "1"
                          },
                          {
                            "name": "ENABLE_ENVOY_STATS_TAGS",
                            "value": "1"
                          },
                          {
                            "name": "APPMESH_VIRTUAL_NODE_NAME",
                            "value": "mesh/ColorTellerAppMesh/virtualNode/red"
                          },
                          {
                            "name": "APPMESH_XDS_ENDPOINT",
                            "value": ""
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -s http://localhost:9901/ready |grep -q LIVE"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      },
                      {
                        "dependsOn": [
                          {
                            "containerName": "envoy",
                            "condition": "HEALTHY"
                          }
                        ],
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ".dkr.ecr.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "@sha256:",
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        "name": "red",
                        "portMappings": [
                          {
                            "containerPort": 9080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "red",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "COLOR",
                            "value": "red"
                          },
                          {
                            "name": "SERVER_PORT",
                            "value": "9080"
                          },
                          {
                            "name": "STAGE",
                            "value": "v1.2"
                          }
                        ]
                      },
                      {
                        "essential": true,
                        "image": "amazon/aws-xray-daemon",
                        "name": "xray",
                        "portMappings": [
                          {
                            "containerPort": 2000,
                            "protocol": "udp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "red",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "executionroleD9A39BE6",
                        "Arn"
                      ]
                    },
                    "family": "red-task",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "proxyConfiguration": {
                      "containerName": "envoy",
                      "proxyConfigurationProperties": [
                        {
                          "name": "AppPorts",
                          "value": "9080"
                        },
                        {
                          "name": "ProxyEgressPort",
                          "value": "15001"
                        },
                        {
                          "name": "ProxyIngressPort",
                          "value": "15000"
                        },
                        {
                          "name": "EgressIgnoredIPs",
                          "value": "169.254.170.2,169.254.169.254"
                        },
                        {
                          "name": "IgnoredUID",
                          "value": "1337"
                        }
                      ],
                      "type": "APPMESH"
                    },
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskrole5938D619",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "envoy": {
                "id": "envoy",
                "path": "colorteller-app-service/red-task/envoy"
              },
              "red": {
                "id": "red",
                "path": "colorteller-app-service/red-task/red",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "colorteller-app-service/red-task/red/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "colorteller-app-service/red-task/red/AssetImage/Staging"
                      },
                      "AdoptRepository": {
                        "id": "AdoptRepository",
                        "path": "colorteller-app-service/red-task/red/AssetImage/AdoptRepository",
                        "children": {
                          "Function": {
                            "id": "Function",
                            "path": "colorteller-app-service/red-task/red/AssetImage/AdoptRepository/Function"
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/red-task/red/AssetImage/AdoptRepository/Resource",
                            "children": {
                              "Default": {
                                "id": "Default",
                                "path": "colorteller-app-service/red-task/red/AssetImage/AdoptRepository/Resource/Default"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xray": {
                "id": "xray",
                "path": "colorteller-app-service/red-task/xray"
              }
            }
          },
          "white-task": {
            "id": "white-task",
            "path": "colorteller-app-service/white-task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/white-task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":840364872350:aws-appmesh-envoy"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/aws-appmesh-envoy:v1.12.1.1-prod"
                            ]
                          ]
                        },
                        "name": "envoy",
                        "portMappings": [
                          {
                            "containerPort": 9901,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15000,
                            "protocol": "tcp"
                          },
                          {
                            "containerPort": 15001,
                            "protocol": "tcp"
                          }
                        ],
                        "ulimits": [
                          {
                            "name": "nofile",
                            "softLimit": 15000,
                            "hardLimit": 15000
                          }
                        ],
                        "user": "1337",
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "white",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "ENVOY_LOG_LEVEL",
                            "value": "info"
                          },
                          {
                            "name": "ENABLE_ENVOY_XRAY_TRACING",
                            "value": "1"
                          },
                          {
                            "name": "ENABLE_ENVOY_STATS_TAGS",
                            "value": "1"
                          },
                          {
                            "name": "APPMESH_VIRTUAL_NODE_NAME",
                            "value": "mesh/ColorTellerAppMesh/virtualNode/white"
                          },
                          {
                            "name": "APPMESH_XDS_ENDPOINT",
                            "value": ""
                          }
                        ],
                        "healthCheck": {
                          "command": [
                            "CMD-SHELL",
                            "curl -s http://localhost:9901/ready |grep -q LIVE"
                          ],
                          "interval": 30,
                          "retries": 3,
                          "timeout": 5
                        }
                      },
                      {
                        "dependsOn": [
                          {
                            "containerName": "envoy",
                            "condition": "HEALTHY"
                          }
                        ],
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ".dkr.ecr.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "@sha256:",
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "@sha256:",
                                      {
                                        "Ref": "AssetParametersf44bb5430616205e9f976b9be30d7dd8b397093693b51ed9ec27a4918b7830a9ImageNameEF038FCC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        "name": "white",
                        "portMappings": [
                          {
                            "containerPort": 9080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "white",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "COLOR",
                            "value": "white"
                          },
                          {
                            "name": "SERVER_PORT",
                            "value": "9080"
                          },
                          {
                            "name": "STAGE",
                            "value": "v1.1"
                          }
                        ]
                      },
                      {
                        "essential": true,
                        "image": "amazon/aws-xray-daemon",
                        "name": "xray",
                        "portMappings": [
                          {
                            "containerPort": 2000,
                            "protocol": "udp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "white",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        }
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "executionroleD9A39BE6",
                        "Arn"
                      ]
                    },
                    "family": "white",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "proxyConfiguration": {
                      "containerName": "envoy",
                      "proxyConfigurationProperties": [
                        {
                          "name": "AppPorts",
                          "value": "9080"
                        },
                        {
                          "name": "ProxyEgressPort",
                          "value": "15001"
                        },
                        {
                          "name": "ProxyIngressPort",
                          "value": "15000"
                        },
                        {
                          "name": "EgressIgnoredIPs",
                          "value": "169.254.170.2,169.254.169.254"
                        },
                        {
                          "name": "IgnoredUID",
                          "value": "1337"
                        }
                      ],
                      "type": "APPMESH"
                    },
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskrole5938D619",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "envoy": {
                "id": "envoy",
                "path": "colorteller-app-service/white-task/envoy"
              },
              "white": {
                "id": "white",
                "path": "colorteller-app-service/white-task/white",
                "children": {
                  "AssetImage": {
                    "id": "AssetImage",
                    "path": "colorteller-app-service/white-task/white/AssetImage",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "colorteller-app-service/white-task/white/AssetImage/Staging"
                      },
                      "AdoptRepository": {
                        "id": "AdoptRepository",
                        "path": "colorteller-app-service/white-task/white/AssetImage/AdoptRepository",
                        "children": {
                          "Function": {
                            "id": "Function",
                            "path": "colorteller-app-service/white-task/white/AssetImage/AdoptRepository/Function"
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/white-task/white/AssetImage/AdoptRepository/Resource",
                            "children": {
                              "Default": {
                                "id": "Default",
                                "path": "colorteller-app-service/white-task/white/AssetImage/AdoptRepository/Resource/Default"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xray": {
                "id": "xray",
                "path": "colorteller-app-service/white-task/xray"
              }
            }
          },
          "tcpecho-tasks": {
            "id": "tcpecho-tasks",
            "path": "colorteller-app-service/tcpecho-tasks",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/tcpecho-tasks/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "cjimti/go-echo",
                        "name": "tcpecho",
                        "portMappings": [
                          {
                            "containerPort": 2701,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "ecscolorteller95A3B0F7"
                            },
                            "awslogs-stream-prefix": "tcpecho",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "TCP_PORT",
                            "value": "2701"
                          },
                          {
                            "name": "NODE_NAME",
                            "value": "mesh/ColorTellerAppMesh/virtualNode/echo"
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "executionroleD9A39BE6",
                        "Arn"
                      ]
                    },
                    "family": "tcpecho",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "taskrole5938D619",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "tcpecho": {
                "id": "tcpecho",
                "path": "colorteller-app-service/tcpecho-tasks/tcpecho"
              }
            }
          },
          "gateway": {
            "id": "gateway",
            "path": "colorteller-app-service/gateway",
            "children": {
              "Service": {
                "id": "Service",
                "path": "colorteller-app-service/gateway/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "fargateserviceautoscalingD107CF93"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 2,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 60,
                    "launchType": "FARGATE",
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Ref": "lbPublicListenergatewayGroupBC538380"
                        },
                        "containerName": "gateway",
                        "containerPort": 9080
                      }
                    ],
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet1Subnet4AE824668015203D"
                          },
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet2Subnet2722E5E51EBB51DE"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "gatewaySecurityGroupE4FCFFA7",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "gatewayCloudmapService60AAAFE8",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "gatewaytask977F917F"
                    }
                  }
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "colorteller-app-service/gateway/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/gateway/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 60
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "gateway",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                            "Id"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/gateway/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/gateway/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "colorteller-app-service/gateway/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputFnGetAttcolortellervpcA3932739CidrBlock3CB0FAC1"
                            },
                            "ipProtocol": "tcp",
                            "fromPort": 9080,
                            "toPort": 9080,
                            "description": "Allow http inbound from VPC"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  },
                  "from colortellerappservicelbSecurityGroup53BFAEA6:9080": {
                    "id": "from colortellerappservicelbSecurityGroup53BFAEA6:9080",
                    "path": "colorteller-app-service/gateway/SecurityGroup/from colortellerappservicelbSecurityGroup53BFAEA6:9080",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 9080,
                        "groupId": {
                          "Fn::GetAtt": [
                            "gatewaySecurityGroupE4FCFFA7",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "lbSecurityGroup47B6F855",
                            "GroupId"
                          ]
                        },
                        "toPort": 9080
                      }
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "colorteller-app-service/gateway/ScalingRole"
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "colorteller-app-service/gateway/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "colorteller-app-service/gateway/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/gateway/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 2,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "fargateserviceautoscalingD107CF93"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "gatewayServiceAF444E74",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        }
                      },
                      "CpuScaling": {
                        "id": "CpuScaling",
                        "path": "colorteller-app-service/gateway/TaskCount/Target/CpuScaling",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/gateway/TaskCount/Target/CpuScaling/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                              "aws:cdk:cloudformation:props": {
                                "policyName": "colortellerappservicegatewayTaskCountTargetCpuScalingF4556ABE",
                                "policyType": "TargetTrackingScaling",
                                "scalingTargetId": {
                                  "Ref": "gatewayTaskCountTargetC423B471"
                                },
                                "targetTrackingScalingPolicyConfiguration": {
                                  "predefinedMetricSpecification": {
                                    "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                  },
                                  "scaleInCooldown": 60,
                                  "scaleOutCooldown": 60,
                                  "targetValue": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "black": {
            "id": "black",
            "path": "colorteller-app-service/black",
            "children": {
              "Service": {
                "id": "Service",
                "path": "colorteller-app-service/black/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "fargateserviceautoscalingD107CF93"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 2,
                    "enableEcsManagedTags": false,
                    "launchType": "FARGATE",
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet1Subnet4AE824668015203D"
                          },
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet2Subnet2722E5E51EBB51DE"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "blackSecurityGroupA9DB0352",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "blackCloudmapServiceB4FF4C1F",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "blacktaskA43618AA"
                    }
                  }
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "colorteller-app-service/black/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/black/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 60
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "black",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                            "Id"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/black/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/black/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "colorteller-app-service/black/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputFnGetAttcolortellervpcA3932739CidrBlock3CB0FAC1"
                            },
                            "ipProtocol": "tcp",
                            "fromPort": 9080,
                            "toPort": 9080,
                            "description": "Allow http inbound from VPC"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "colorteller-app-service/black/ScalingRole"
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "colorteller-app-service/black/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "colorteller-app-service/black/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/black/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 2,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "fargateserviceautoscalingD107CF93"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "blackService945B618C",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        }
                      },
                      "CpuScaling": {
                        "id": "CpuScaling",
                        "path": "colorteller-app-service/black/TaskCount/Target/CpuScaling",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/black/TaskCount/Target/CpuScaling/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                              "aws:cdk:cloudformation:props": {
                                "policyName": "colortellerappserviceblackTaskCountTargetCpuScaling0B975E83",
                                "policyType": "TargetTrackingScaling",
                                "scalingTargetId": {
                                  "Ref": "blackTaskCountTargetA22BEFC7"
                                },
                                "targetTrackingScalingPolicyConfiguration": {
                                  "predefinedMetricSpecification": {
                                    "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                  },
                                  "scaleInCooldown": 60,
                                  "scaleOutCooldown": 60,
                                  "targetValue": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "blue": {
            "id": "blue",
            "path": "colorteller-app-service/blue",
            "children": {
              "Service": {
                "id": "Service",
                "path": "colorteller-app-service/blue/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "fargateserviceautoscalingD107CF93"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 2,
                    "enableEcsManagedTags": false,
                    "launchType": "FARGATE",
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet1Subnet4AE824668015203D"
                          },
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet2Subnet2722E5E51EBB51DE"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "blueSecurityGroup7C579F0D",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "blueCloudmapService53C6F141",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "bluetaskF8D729FD"
                    }
                  }
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "colorteller-app-service/blue/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/blue/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 60
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "blue",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                            "Id"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/blue/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/blue/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "colorteller-app-service/blue/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputFnGetAttcolortellervpcA3932739CidrBlock3CB0FAC1"
                            },
                            "ipProtocol": "tcp",
                            "fromPort": 9080,
                            "toPort": 9080,
                            "description": "Allow http inbound from VPC"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "colorteller-app-service/blue/ScalingRole"
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "colorteller-app-service/blue/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "colorteller-app-service/blue/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/blue/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 2,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "fargateserviceautoscalingD107CF93"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "blueService40D4400F",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        }
                      },
                      "CpuScaling": {
                        "id": "CpuScaling",
                        "path": "colorteller-app-service/blue/TaskCount/Target/CpuScaling",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/blue/TaskCount/Target/CpuScaling/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                              "aws:cdk:cloudformation:props": {
                                "policyName": "colortellerappserviceblueTaskCountTargetCpuScalingE6AEFC6A",
                                "policyType": "TargetTrackingScaling",
                                "scalingTargetId": {
                                  "Ref": "blueTaskCountTargetFE608C04"
                                },
                                "targetTrackingScalingPolicyConfiguration": {
                                  "predefinedMetricSpecification": {
                                    "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                  },
                                  "scaleInCooldown": 60,
                                  "scaleOutCooldown": 60,
                                  "targetValue": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "red": {
            "id": "red",
            "path": "colorteller-app-service/red",
            "children": {
              "Service": {
                "id": "Service",
                "path": "colorteller-app-service/red/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "fargateserviceautoscalingD107CF93"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 2,
                    "enableEcsManagedTags": false,
                    "launchType": "FARGATE",
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet1Subnet4AE824668015203D"
                          },
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet2Subnet2722E5E51EBB51DE"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "redSecurityGroupC601049D",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "redCloudmapServiceFDA8B67D",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "redtaskE70C9D2E"
                    }
                  }
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "colorteller-app-service/red/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/red/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 60
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "red",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                            "Id"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/red/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/red/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "colorteller-app-service/red/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputFnGetAttcolortellervpcA3932739CidrBlock3CB0FAC1"
                            },
                            "ipProtocol": "tcp",
                            "fromPort": 9080,
                            "toPort": 9080,
                            "description": "Allow http inbound from VPC"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "colorteller-app-service/red/ScalingRole"
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "colorteller-app-service/red/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "colorteller-app-service/red/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/red/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 2,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "fargateserviceautoscalingD107CF93"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "redServiceCD09A173",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        }
                      },
                      "CpuScaling": {
                        "id": "CpuScaling",
                        "path": "colorteller-app-service/red/TaskCount/Target/CpuScaling",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/red/TaskCount/Target/CpuScaling/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                              "aws:cdk:cloudformation:props": {
                                "policyName": "colortellerappserviceredTaskCountTargetCpuScalingF7E69643",
                                "policyType": "TargetTrackingScaling",
                                "scalingTargetId": {
                                  "Ref": "redTaskCountTarget3EEFA3FC"
                                },
                                "targetTrackingScalingPolicyConfiguration": {
                                  "predefinedMetricSpecification": {
                                    "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                  },
                                  "scaleInCooldown": 60,
                                  "scaleOutCooldown": 60,
                                  "targetValue": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "white": {
            "id": "white",
            "path": "colorteller-app-service/white",
            "children": {
              "Service": {
                "id": "Service",
                "path": "colorteller-app-service/white/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "fargateserviceautoscalingD107CF93"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 2,
                    "enableEcsManagedTags": false,
                    "launchType": "FARGATE",
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet1Subnet4AE824668015203D"
                          },
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet2Subnet2722E5E51EBB51DE"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "whiteSecurityGroup18B39C67",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "whiteCloudmapService45564BE0",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "whitetask6B6C2B2A"
                    }
                  }
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "colorteller-app-service/white/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/white/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 60
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "colorteller",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                            "Id"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/white/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/white/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "colorteller-app-service/white/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputFnGetAttcolortellervpcA3932739CidrBlock3CB0FAC1"
                            },
                            "ipProtocol": "tcp",
                            "fromPort": 9080,
                            "toPort": 9080,
                            "description": "Allow http inbound from VPC"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "colorteller-app-service/white/ScalingRole"
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "colorteller-app-service/white/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "colorteller-app-service/white/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/white/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 2,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "fargateserviceautoscalingD107CF93"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "whiteService306AD990",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        }
                      },
                      "CpuScaling": {
                        "id": "CpuScaling",
                        "path": "colorteller-app-service/white/TaskCount/Target/CpuScaling",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/white/TaskCount/Target/CpuScaling/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                              "aws:cdk:cloudformation:props": {
                                "policyName": "colortellerappservicewhiteTaskCountTargetCpuScaling3511D961",
                                "policyType": "TargetTrackingScaling",
                                "scalingTargetId": {
                                  "Ref": "whiteTaskCountTarget6F9A53BD"
                                },
                                "targetTrackingScalingPolicyConfiguration": {
                                  "predefinedMetricSpecification": {
                                    "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                  },
                                  "scaleInCooldown": 60,
                                  "scaleOutCooldown": 60,
                                  "targetValue": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tcpecho": {
            "id": "tcpecho",
            "path": "colorteller-app-service/tcpecho",
            "children": {
              "Service": {
                "id": "Service",
                "path": "colorteller-app-service/tcpecho/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "fargateserviceautoscalingD107CF93"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "desiredCount": 2,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 60,
                    "launchType": "FARGATE",
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Ref": "lbPublicListenergatewayGroupBC538380"
                        },
                        "containerName": "tcpecho",
                        "containerPort": 2701
                      }
                    ],
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet1Subnet4AE824668015203D"
                          },
                          {
                            "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPrivateSubnet2Subnet2722E5E51EBB51DE"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "tcpechoSecurityGroupFBA1D811",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceRegistries": [
                      {
                        "registryArn": {
                          "Fn::GetAtt": [
                            "tcpechoCloudmapServiceAFB081F4",
                            "Arn"
                          ]
                        }
                      }
                    ],
                    "taskDefinition": {
                      "Ref": "tcpechotasks62ED6AD8"
                    }
                  }
                }
              },
              "CloudmapService": {
                "id": "CloudmapService",
                "path": "colorteller-app-service/tcpecho/CloudmapService",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/tcpecho/CloudmapService/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ServiceDiscovery::Service",
                      "aws:cdk:cloudformation:props": {
                        "dnsConfig": {
                          "dnsRecords": [
                            {
                              "type": "A",
                              "ttl": 60
                            }
                          ],
                          "namespaceId": {
                            "Fn::GetAtt": [
                              "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                              "Id"
                            ]
                          },
                          "routingPolicy": "MULTIVALUE"
                        },
                        "healthCheckCustomConfig": {
                          "failureThreshold": 1
                        },
                        "name": "tcpecho",
                        "namespaceId": {
                          "Fn::GetAtt": [
                            "fargateserviceautoscalingDefaultServiceDiscoveryNamespaceDF6E9E27",
                            "Id"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/tcpecho/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/tcpecho/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "colorteller-app-service/tcpecho/SecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "securityGroupIngress": [
                          {
                            "cidrIp": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputFnGetAttcolortellervpcA3932739CidrBlock3CB0FAC1"
                            },
                            "ipProtocol": "tcp",
                            "fromPort": 2701,
                            "toPort": 2701,
                            "description": "Allow http inbound from VPC"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  },
                  "from colortellerappservicelbSecurityGroup53BFAEA6:2701": {
                    "id": "from colortellerappservicelbSecurityGroup53BFAEA6:2701",
                    "path": "colorteller-app-service/tcpecho/SecurityGroup/from colortellerappservicelbSecurityGroup53BFAEA6:2701",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 2701,
                        "groupId": {
                          "Fn::GetAtt": [
                            "tcpechoSecurityGroupFBA1D811",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "lbSecurityGroup47B6F855",
                            "GroupId"
                          ]
                        },
                        "toPort": 2701
                      }
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "colorteller-app-service/tcpecho/ScalingRole"
              },
              "TaskCount": {
                "id": "TaskCount",
                "path": "colorteller-app-service/tcpecho/TaskCount",
                "children": {
                  "Target": {
                    "id": "Target",
                    "path": "colorteller-app-service/tcpecho/TaskCount/Target",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/tcpecho/TaskCount/Target/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                          "aws:cdk:cloudformation:props": {
                            "maxCapacity": 2,
                            "minCapacity": 1,
                            "resourceId": {
                              "Fn::Join": [
                                "",
                                [
                                  "service/",
                                  {
                                    "Ref": "fargateserviceautoscalingD107CF93"
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "tcpechoServiceE76E9129",
                                      "Name"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                ]
                              ]
                            },
                            "scalableDimension": "ecs:service:DesiredCount",
                            "serviceNamespace": "ecs"
                          }
                        }
                      },
                      "CpuScaling": {
                        "id": "CpuScaling",
                        "path": "colorteller-app-service/tcpecho/TaskCount/Target/CpuScaling",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "colorteller-app-service/tcpecho/TaskCount/Target/CpuScaling/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                              "aws:cdk:cloudformation:props": {
                                "policyName": "colortellerappservicetcpechoTaskCountTargetCpuScaling64FA25A2",
                                "policyType": "TargetTrackingScaling",
                                "scalingTargetId": {
                                  "Ref": "tcpechoTaskCountTarget7D8B66D9"
                                },
                                "targetTrackingScalingPolicyConfiguration": {
                                  "predefinedMetricSpecification": {
                                    "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                  },
                                  "scaleInCooldown": 60,
                                  "scaleOutCooldown": 60,
                                  "targetValue": 50
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "lb": {
            "id": "lb",
            "path": "colorteller-app-service/lb",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "colorteller-app-service/lb/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "lbSecurityGroup47B6F855",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": [
                      {
                        "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPublicSubnet1Subnet87371C14EEED662C"
                      },
                      {
                        "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcPublicSubnet2SubnetA18F1BEB2D44EAC2"
                      }
                    ],
                    "type": "application"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "colorteller-app-service/lb/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/lb/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB colortellerappservicelb2287E1AC",
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 80,
                            "toPort": 80,
                            "description": "Allow from anyone on port 80"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                        }
                      }
                    }
                  },
                  "to colortellerappservicegatewaySecurityGroup0A95B1F6:9080": {
                    "id": "to colortellerappservicegatewaySecurityGroup0A95B1F6:9080",
                    "path": "colorteller-app-service/lb/SecurityGroup/to colortellerappservicegatewaySecurityGroup0A95B1F6:9080",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::GetAtt": [
                            "lbSecurityGroup47B6F855",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "gatewaySecurityGroupE4FCFFA7",
                            "GroupId"
                          ]
                        },
                        "fromPort": 9080,
                        "toPort": 9080
                      }
                    }
                  },
                  "to colortellerappservicetcpechoSecurityGroup17EB0EA7:2701": {
                    "id": "to colortellerappservicetcpechoSecurityGroup17EB0EA7:2701",
                    "path": "colorteller-app-service/lb/SecurityGroup/to colortellerappservicetcpechoSecurityGroup17EB0EA7:2701",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::GetAtt": [
                            "lbSecurityGroup47B6F855",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "tcpechoSecurityGroupFBA1D811",
                            "GroupId"
                          ]
                        },
                        "fromPort": 2701,
                        "toPort": 2701
                      }
                    }
                  }
                }
              },
              "PublicListener": {
                "id": "PublicListener",
                "path": "colorteller-app-service/lb/PublicListener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "colorteller-app-service/lb/PublicListener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "targetGroupArn": {
                              "Ref": "lbPublicListenergatewayGroupBC538380"
                            },
                            "type": "forward"
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "lbA35910C5"
                        },
                        "port": 80,
                        "protocol": "HTTP"
                      }
                    }
                  },
                  "gatewayGroup": {
                    "id": "gatewayGroup",
                    "path": "colorteller-app-service/lb/PublicListener/gatewayGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "colorteller-app-service/lb/PublicListener/gatewayGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "healthCheckIntervalSeconds": 60,
                            "healthCheckPath": "/ping",
                            "healthCheckPort": "9080",
                            "healthCheckTimeoutSeconds": 5,
                            "port": 80,
                            "protocol": "HTTP",
                            "targetType": "ip",
                            "vpcId": {
                              "Fn::ImportValue": "colorteller-network:ExportsOutputRefcolortellervpcA393273978642635"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "LoadBalancerDNS": {
            "id": "LoadBalancerDNS",
            "path": "colorteller-app-service/LoadBalancerDNS"
          },
          "ClusterName": {
            "id": "ClusterName",
            "path": "colorteller-app-service/ClusterName"
          }
        }
      }
    }
  }
}